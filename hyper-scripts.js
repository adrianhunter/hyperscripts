// Generated by LiveScript 1.5.0
(function(){
  var needle, fs, cheerio, csvjson, STATE, req, defaultValue;
  needle = require('needle');
  fs = require('fs');
  cheerio = require('cheerio');
  csvjson = require('csvjson');
  global._ = require('underscore');
  STATE = {
    tmp_file: 'some-file.txt'
  };
  req = function(p, q){
    q == null && (q = 'p');
    throw new Error(q + " req " + (p ? 'Type: ' + p : ''));
  };
  defaultValue = function(p){
    return p;
  };
  global.GET = function(p, q){
    needle.get("http://" + p, function(e, r){
      if (q) {
        return q(r != null ? r.body : void 8);
      }
    });
  };
  global.write = function(p, q, r){
    q == null && (q = defaultValue(STATE.tmp_file));
    return fs.writeFile(q, p, 'utf8', r);
  };
  global._$ = function(p){
    return cheerio.load(p);
  };
  global.fromPipe = function(p){
    var istring;
    p == null && (p = req());
    istring = '';
    process.stdin.resume();
    process.stdin.setEncoding('utf8');
    process.stdin.on('data', function(data){
      return istring += data;
    });
    return process.stdin.on('end', function(){
      return p(istring);
    });
  };
  global.csvtoj = function(p){
    p == null && (p = defaultValue(STATE.tmp_file));
    return csvjson.toObject(p).output;
  };
  global.copy = function(p, q){
    var myfile;
    p == null && (p = req('String'));
    q == null && (q = 'new_copy');
    myfile = fs.readFileSync(p);
    return fs.writeFile(q, myfile);
  };
  global._sweb = function(p, q){
    return GET(p, function(p2){
      return write(p2, '_sweb.html');
    });
  };
}).call(this);
